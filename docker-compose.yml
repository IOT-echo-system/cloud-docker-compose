version: '3.8'
services:
  #  cloudflared:
  #    image: cloudflare/cloudflared:latest
  #    container_name: cloudflared
  #    restart: unless-stopped
  #    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - cloud-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:3030
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:3030
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 3030:3030
    networks:
      - cloud-network

  backend-mqtt:
    container_name: backend-mqtt
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./backend-mqtt/config:/mosquitto/config
      - ./backend-mqtt/data:/mosquitto/data
      - ./backend-mqtt/log:/mosquitto/log
    ports:
      - 1884:1883
    networks:
      - cloud-network

  node-mqtt:
    container_name: node-mqtt
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./node-mqtt/config:/mosquitto/config
      - ./node-mqtt/data:/mosquitto/data
      - ./node-mqtt/log:/mosquitto/log
    ports:
      - 1883:1883
    networks:
      - cloud-network

  mongo:
    image: mongo:4.4.18
    container_name: mongo
    restart: unless-stopped
    ports:
      - 27018:27017
    networks:
      - cloud-network
    volumes:
      - ./mongo-data:/data/db

  #  mongo-backup:
  #    image: shiviraj/db-backup:arm64
  #    container_name: mongo-backup
  #    restart: unless-stopped
  #    environment:
  #      DB_URL: mongodb://mongo:27017
  #      CRON: ${DB_BACKUP_CRON:-'0 0,12 * * *'}
  #      GIT_REPOSITORY: ${GIT_REPOSITORY}
  #      USER_EMAIL: ${USER_EMAIL}
  #      USER_NAME: ${USER_NAME}
  #    depends_on:
  #      - mongo
  #    networks:
  #      - cloud-network

  cloud-nginx:
    image: nginx:stable-perl
    container_name: cloud-nginx
    restart: unless-stopped
    depends_on:
      - cloud-ui
      - cloud-bff
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 9000:9000
    networks:
      - cloud-network

  cloud-ui:
    image: shiviraj/cloud-ui:latest
    restart: unless-stopped
    depends_on:
      - cloud-bff
    environment:
      PORT: 3000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - cloud-network

  cloud-bff:
    image: shiviraj/cloud-bff:latest
    restart: unless-stopped
    environment:
      PORT: 3001
      API_GATEWAY_BASE_URL: http://auth-service:9001
      MQTT_URL: mqtt://bff-mqtt:1883
      MQTT_USERNAME: ${BFF_MQTT_USERNAME}
      MQTT_PASSWORD: ${BFF_MQTT_PASSWORD}
      AUTH_SERVICE_BASE_URL: http://auth-service:9001
      USER_SERVICE_BASE_URL: http://user-service:9002
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - cloud-network

  node-bff:
    image: shiviraj/node-bff:latest
    container_name: node-bff
    restart: unless-stopped
    environment:
      API_GATEWAY_BASE_URL: http://auth-service:9001
      MQTT_URL: mqtt://node-mqtt:1883
      ENVIRONMENT: prod
      MQTT_USERNAME: ${NODE_MQTT_USERNAME}
      MQTT_PASSWORD: ${NODE_MQTT_PASSWORD}
    networks:
      - cloud-network

  auth-service:
    image: shiviraj/auth-service:latest
    restart: unless-stopped
    environment:
      PORT: 9001
      MONGODB_URL: mongodb://mongo:27017
      MQTT_BROKER: tcp://backend-mqtt:1883
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      NODE_BFF_URL: http://node-bff:3002
      CLOUD_BFF_URL: http://cloud-bff:3001
      USER_SERVICE_BASE_URL: http://user-service:9002
      INTERNAL_ACCESS_TOKEN: ${INTERNAL_ACCESS_TOKEN}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - cloud-network

  user-service:
    image: shiviraj/user-service:latest
    restart: unless-stopped
    environment:
      PORT: 9002
      MONGODB_URL: mongodb://mongo:27017
      NODE_BFF_URL: http://node-bff:3002
      CLOUD_BFF_URL: http://cloud-bff:3001
      AUTH_SERVICE_BASE_URL: http://auth-service:9001
      INTERNAL_ACCESS_TOKEN: ${INTERNAL_ACCESS_TOKEN}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - cloud-network

  audit-service:
    image: shiviraj/audit-service:latest
    restart: unless-stopped
    environment:
      PORT: 9003
      MONGODB_URL: mongodb://mongo:27017
      AUTH_SERVICE_BASE_URL: http://auth-service:9001
      INTERNAL_ACCESS_TOKEN: ${INTERNAL_ACCESS_TOKEN}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - cloud-network

networks:
  cloud-network:
    driver: bridge
